@page
@model HomeSchoolDayBook.Pages.Grades.GradesForEntriesModel
@section CSS {
    <link rel="stylesheet" href="~/lib/datepicker/bootstrap-datepicker-standalone.css" />
    <link rel="stylesheet" href="~/lib/datatables/datatables.min.css" />
    <link rel="stylesheet" href="~/lib/datatables/datatables.css" />
}

@{
    ViewData["Title"] = "Grades for Individual Entries";
}

<h2>@ViewData["Title"]</h2>
<hr />
<form method="get" id="grade-listing-form">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="form-group col-md-2 col-sm-3 col-xs-5">
            <label asp-for="StudentID" class="control-label"></label>
            <select asp-for="StudentID" asp-items="Model.StudentOptions" class="form-control">
                <option value="">-- Select Student --</option>
            </select>
            <span asp-validation-for="StudentID" class="text-danger"></span>
        </div>
    @*</div>
    <div class="row">*@
        <div class="form-group col-md-2 col-sm-3 col-xs-5">
            <label asp-for="SubjectID" class=" control-label"></label>
            <select asp-for="SubjectID" asp-items="Model.SubjectOptions" class="form-control">
                <option value="">-- Select Subject --</option>
            </select>
            <span asp-validation-for="SubjectID" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-2 col-sm-3 col-xs-4">
            <label asp-for="FromDate" class="control-label"></label>
            <input asp-for="FromDate" type="text" class="form-control" />
            <span asp-validation-for="FromDate" class="text-danger"></span>
        </div>
        <div class="form-group col-md-2 col-sm-3 col-xs-4">
            <label asp-for="ToDate" class="control-label"></label>
            <input asp-for="ToDate" type="text" class="form-control" />
            <span asp-validation-for="ToDate" class="text-danger"></span>
        </div>
        <div class="form-group col-xs-2 bottom-aligned">
            <input type="submit" value="Get Grade Listing" class="btn btn-default" />
        </div>
    </div>
</form>

<a asp-page="./StudentGradeSummary"
   asp-route-StudentID="@Model.StudentID"
   asp-route-FromDate="@Model.FromDate.ToShortDateString()"
   asp-route-ToDate="@Model.ToDate.ToShortDateString()">View All Grades for @Model.StudentName</a>
<br />
<a asp-page="./SubjectGradeSummary"
   asp-route-SubjectID="@Model.SubjectID"
   asp-route-FromDate="@Model.FromDate.ToShortDateString()"
   asp-route-ToDate="@Model.ToDate.ToShortDateString()">View All Grades for @Model.SubjectName</a>

<hr />
@{
    if (Model.Grades.Count > 0)
    {
        <h5>
            <strong>
                Overall Grade:
                @Html.DisplayFor(model => model.OverallPointsEarned) /
                @Html.DisplayFor(model => model.OverallPointsAvailable) =
                @Html.DisplayFor(model => model.OverallPercentEarned)
            </strong>
        </h5>
        <hr />
    }
}
<div>
    <table class="table" id="gradelisting">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Grades[0].Entry.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Grades[0].Entry.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Grades[0].PointsEarned)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Grades[0].PointsAvailable)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Grades[0].PercentEarned)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Grades)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Entry.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Entry.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PointsEarned)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PointsAvailable)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PercentEarned)
                    </td>
                    <td>
                        <a asp-page="../Entries/Edit" asp-route-id="@item.Entry.ID">Edit</a> |
                        <a asp-page="../Entries/Details" asp-route-id="@item.Entry.ID">Details</a> |
                        <a asp-page="../Entries/Delete" asp-route-id="@item.Entry.ID">Delete the Entry</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/lib/datepicker/bootstrap-datepicker.js"></script>
    <script src="~/lib/datatables/datatables.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#FromDate').datepicker({
                orientation: "bottom"
            });
            $('#ToDate').datepicker({
                orientation: "bottom"
            });
            $('#gradelisting').DataTable({
                "language": {
                    "lengthMenu": "Show _MENU_ entries"
                },
                "columnDefs": [
                    {
                        className: "text-right", "targets": [2, 3, 4, 5]
                    }],
                columns: [
                    { data: "date" },
                    { data: "title" },
                    { data: "earned" },
                    { data: "available" },
                    { data: "percent" },
                    { data: "links", "orderable": false }
                ]
            });
        });
    </script>
}