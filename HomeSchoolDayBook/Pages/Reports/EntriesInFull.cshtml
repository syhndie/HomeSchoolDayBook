@page
@model HomeSchoolDayBook.Pages.Reports.EntriesInFullModel
@{
    ViewData["Title"] = "Entries in Full";
    Layout = "~/Pages/Reports/_ReportsLayout.cshtml";

    DateTime lastDisplayedDate = DateTime.MinValue;
}

<h3>Entries In Full</h3>
<h4>@Html.DisplayFor(model => model.EntriesReportVM.StartDate) to @Html.DisplayFor(model => model.EntriesReportVM.EndDate)</h4>
<h4>@Html.DisplayFor(model => model.EntriesReportVM.StudentNames)</h4>

<hr />

@foreach (var entry in Model.EntriesReportVM.Entries)
{
    @if (entry.Date != lastDisplayedDate)
    {
        <div class="row">
            <div class="col-xs-12">
                <h4>@Html.DisplayFor(model => entry.Date)</h4>
            </div>
        </div>
        {
            lastDisplayedDate = entry.Date;
        }
    }
    <div class="row">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => entry.Title)
            </dt>
            <dd>
                @Html.DisplayFor(model => entry.Title)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => entry.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => entry.Description)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => entry.ComputedTimeSpent)
            </dt>
            <dd>
                @Html.DisplayFor(model => entry.ComputedTimeSpent)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => Model.StudentNameLookup)
            </dt>
            <dd>
                @Html.DisplayFor(modelItem => Model.StudentNameLookup[entry.ID])
            </dd>
            <dt>
                @Html.DisplayNameFor(model => Model.SubjectNameLookup)
            </dt>
            <dd>
                @Html.DisplayFor(modelItem => Model.SubjectNameLookup[entry.ID])
            </dd>
            <dt>
                @Html.DisplayNameFor(model => entry.Grades)
            </dt>
            <dd>
                @foreach (var grade in entry.Grades)
                {
                    @grade.Student.Name@:,&nbsp;
                    @grade.Subject.Name@::&nbsp;
                    @grade.PointsEarned@:&nbsp;/
                    @grade.PointsAvailable<br />
                }
            </dd>
        </dl>
        
        
        
        @*<div class="col-xs-12 indented-report">
            <p>
                <strong>@Html.DisplayFor(model => entry.Title):</strong>
                @Html.DisplayFor(model => entry.Description)
                <br />
                @Html.DisplayNameFor(model => Model.StudentNameLookup):
                @Html.DisplayFor(modelItem => Model.StudentNameLookup[entry.ID])
                <br />
                @Html.DisplayNameFor(model => Model.SubjectNameLookup):
                @Html.DisplayFor(modelItem => Model.SubjectNameLookup[entry.ID])
                <br />
                @Html.DisplayNameFor(model => entry.ComputedTimeSpent):
                @Html.DisplayFor(model => entry.ComputedTimeSpent)
                <br />
                @Html.DisplayNameFor(model => entry.Grades):
                @foreach (var grade in entry.Grades)
                {
                    @grade.Student.Name@:,&nbsp;
                    @grade.Subject.Name@::&nbsp;
                    @grade.PointsEarned@:&nbsp;/
                    @grade.PointsAvailable<br />
                }
            </p>
        </div>*@
    </div>
}